{"version":3,"file":"form-create.core.min.js","sources":["../src/components/formCreate.js","../src/core/mergeJsxProps.js","../src/factory/vData.js","../src/factory/creator.js","../src/core/util.js","../src/factory/maker.js","../src/factory/vNode.js","../src/factory/parser.js","../src/core/render.js","../src/core/api.js","../src/core/handle.js","../src/components/fragment.jsx","../src/core/index.js","../src/factory/form.js"],"sourcesContent":["import {deepExtend} from '@form-create/utils';\n\nexport const formCreateName = 'FormCreate';\n\nexport default function $FormCreate(FormCreate, components) {\n    return {\n        name: formCreateName,\n        componentName: formCreateName,\n        props: {\n            rule: {\n                type: Array,\n                required: true\n            },\n            option: {\n                type: Object,\n                default: () => {\n                    return {};\n                },\n                required: false\n            },\n            value: Object\n        },\n        data: () => {\n            return {\n                formData: undefined,\n                buttonProps: undefined,\n                resetProps: undefined,\n                $f: undefined,\n                isShow: true,\n                unique: 1,\n            };\n        },\n        components,\n        render() {\n            return this.formCreate.render();\n        },\n        methods: {\n            _buttonProps(props) {\n                this.$set(this, 'buttonProps', deepExtend(this.buttonProps, props));\n            },\n            _resetProps(props) {\n                this.$set(this, 'resetProps', deepExtend(this.resetProps, props));\n            },\n            _refresh() {\n                ++this.unique;\n            }\n        },\n        watch: {\n            option: '_refresh',\n            rule(n) {\n                this.formCreate.handle.reloadRule(n);\n            }\n        },\n        beforeCreate() {\n            const {rule, option} = this.$options.propsData;\n            this.formCreate = new FormCreate(rule, option);\n            this.formCreate.beforeCreate(this);\n        },\n        created() {\n            this.formCreate.created();\n            this.$f = this.formCreate.api();\n            this.$emit('input', this.$f);\n        },\n        mounted() {\n            this.formCreate.mounted();\n            this.$emit('input', this.$f);\n        },\n        beforeDestroy() {\n            this.formCreate.handle.reloadRule([]);\n            this.formCreate.handle.$render.clearCacheAll();\n        },\n    }\n}\n","const normalMerge = ['attrs', 'props', 'domProps'];\nconst toArrayMerge = ['class', 'style', 'directives'];\nconst functionalMerge = ['on', 'nativeOn'];\n\nconst mergeJsxProps = (objects, initial) =>\n    objects.reduce((a, b) => {\n        for (const key in b) {\n            if (a[key]) {\n                if (normalMerge.indexOf(key) !== -1) {\n                    a[key] = {...a[key], ...b[key]}\n                } else if (toArrayMerge.indexOf(key) !== -1) {\n                    const arrA = a[key] instanceof Array ? a[key] : [a[key]];\n                    const arrB = b[key] instanceof Array ? b[key] : [b[key]];\n                    a[key] = [...arrA, ...arrB]\n                } else if (functionalMerge.indexOf(key) !== -1) {\n                    for (const event in b[key]) {\n                        if (a[key][event]) {\n                            const arrA = a[key][event] instanceof Array ? a[key][event] : [a[key][event]];\n                            const arrB = b[key][event] instanceof Array ? b[key][event] : [b[key][event]];\n                            a[key][event] = [...arrA, ...arrB]\n                        } else {\n                            a[key][event] = b[key][event]\n                        }\n                    }\n                } else if (key === 'hook') {\n                    for (let hook in b[key]) {\n                        if (a[key][hook]) {\n                            a[key][hook] = mergeFn(a[key][hook], b[key][hook])\n                        } else {\n                            a[key][hook] = b[key][hook]\n                        }\n                    }\n                } else {\n                    a[key] = b[key]\n                }\n            } else {\n                a[key] = b[key]\n            }\n        }\n        return a\n    }, initial);\n\nconst mergeFn = (fn1, fn2) =>\n    function () {\n        fn1 && fn1.apply(this, arguments);\n        fn2 && fn2.apply(this, arguments);\n    };\n\nexport default mergeJsxProps\n","import {isPlainObject, isUndef, toString} from '@form-create/utils';\nimport mergeJsxProps from '../core/mergeJsxProps';\n\nfunction defVData() {\n    return {\n        // class: {},\n        // style: {},\n        // attrs: {},\n        props: {},\n        // domProps: {},\n        on: {},\n        // nativeOn: {},\n        // directives: [],\n        // scopedSlots: {},\n        // slot: undefined,\n        // key: undefined,\n        // ref: undefined\n    };\n}\n\nexport default class VData {\n\n    constructor() {\n        this.init();\n    }\n\n    merge(props) {\n        mergeJsxProps([props], this._data);\n        return this;\n    }\n\n    class(classList, status = true) {\n        if (isUndef(classList)) return this;\n\n        if (Array.isArray(classList)) {\n            this.merge({class: classList});\n        } else if (isPlainObject(classList)) {\n            this.merge(classList);\n        } else {\n            this.merge({class: {[toString(classList)]: !!status}});\n        }\n\n        return this;\n    }\n\n    init() {\n        this._data = defVData();\n        return this;\n    }\n\n    get() {\n        const data = Object.keys(this._data).reduce((initial, key) => {\n            const value = this._data[key];\n            if (value === undefined) return initial;\n            if (Array.isArray(value) && !value.length) return initial;\n            if (isPlainObject(value) && !Object.keys(value).length && key !== 'props') return initial;\n\n            initial[key] = value;\n            return initial;\n        }, {});\n        this.init();\n        return data;\n    }\n}\n\nconst keyList = ['ref', 'key', 'slot'];\nconst objList = ['scopedSlots', 'nativeOn', 'on', 'domProps', 'props', 'attrs', 'style', 'directives'];\n\nkeyList.forEach(key => {\n    VData.prototype[key] = function (val) {\n        this.merge({[key]: val});\n        return this;\n    };\n});\n\nobjList.forEach(key => {\n    VData.prototype[key] = function (obj, val) {\n        if (isUndef(obj)) return this;\n        if (isPlainObject(obj)) {\n            this.merge({[key]: obj})\n        } else {\n            this.merge({[key]: {[toString(obj)]: val}})\n        }\n\n        return this;\n    };\n});\n\nexport const vdataField = objList.concat(keyList, 'class');\n","import {$set, deepExtend, extend, isFunction, isPlainObject} from '@form-create/utils';\nimport VData from './vData';\n\nfunction baseRule() {\n    return {\n        validate: [],\n        options: [],\n        col: {},\n        children: [],\n        control: [],\n        emit: [],\n        template: undefined,\n        emitPrefix: undefined,\n        native: undefined,\n        info: undefined,\n    };\n}\n\nexport function creatorFactory(name) {\n    return (title, field, value, props = {}) => new Creator(name, title, field, value, props);\n}\n\nexport function creatorTypeFactory(name, type, typeName = 'type') {\n    return (title, field, value, props = {}) => {\n        const maker = new Creator(name, title, field, value, props);\n        if (isFunction(type)) type(maker);\n        else maker.props(typeName, type);\n        return maker;\n    };\n}\n\nexport default class Creator extends VData {\n    constructor(type, title, field, value, props = {}) {\n        super();\n        extend(this._data, baseRule());\n        extend(this._data, {type, title, field, value});\n        if (isPlainObject(props)) this.props(props);\n    }\n\n    type(type) {\n        this.props('type', type);\n        return this;\n    }\n\n    _clone() {\n        const clone = new this.constructor();\n        clone._data = deepExtend({}, this._data);\n        return clone;\n    }\n\n    getRule() {\n        return this._data;\n    }\n\n    event(...args) {\n        this.on(...args);\n        return this;\n    }\n}\n\nconst keyAttrs = ['emitPrefix', 'className', 'value', 'name', 'title', 'native', 'info', 'hidden', 'visibility', 'inject', 'model'];\n\nkeyAttrs.forEach(attr => {\n    Creator.prototype[attr] = function (value) {\n        $set(this._data, attr, value);\n        return this;\n    };\n});\n\nconst objAttrs = ['col'];\n\nobjAttrs.forEach(attr => {\n    Creator.prototype[attr] = function (opt) {\n        $set(this._data, attr, extend(this._data[attr], opt));\n        return this;\n    };\n});\n\nconst arrAttrs = ['validate', 'options', 'children', 'emit', 'control'];\n\narrAttrs.forEach(attr => {\n    Creator.prototype[attr] = function (opt) {\n        if (!Array.isArray(opt)) opt = [opt];\n        $set(this._data, attr, this._data[attr].concat(opt));\n        return this;\n    };\n});\n","import {deepExtend, isUndef} from '@form-create/utils';\n\nconst PREFIX = '[[FORM-CREATE-PREFIX-';\nconst SUFFIX = '-FORM-CREATE-SUFFIX]]';\n\nexport function toJson(obj) {\n    return JSON.stringify(deepExtend([], obj, true), function (key, val) {\n        if (val && val._isVue === true)\n            return undefined;\n\n        if (typeof val !== 'function') {\n            return val;\n        }\n        if (val.__inject)\n            val = val.__origin;\n\n        if (val.__emit)\n            return undefined;\n\n        return PREFIX + val + SUFFIX;\n    });\n}\n\nfunction makeFn(fn) {\n    return eval('(function(){return ' + fn + ' })()')\n}\n\nexport function parseJson(json, mode) {\n    return JSON.parse(json, function (k, v) {\n        if (isUndef(v) || !v.indexOf) return v;\n        try {\n            if (v.indexOf(SUFFIX) > 0 && v.indexOf(PREFIX) === 0) {\n                v = v.replace(SUFFIX, '').replace(PREFIX, '');\n                return makeFn(v.indexOf('function') === -1 && v.indexOf('(') !== 0 ? 'function ' + v : v);\n            } else if (!mode && v.indexOf('function') > -1)\n                return makeFn(v)\n        } catch (e) {\n            console.error(`[form-create]解析失败:${v}`);\n            return undefined;\n        }\n        return v;\n    });\n}\n\nexport function enumerable(value) {\n    return {\n        value,\n        enumerable: false,\n        configurable: false\n    }\n}\n\nexport function copyRule(rule, mode) {\n    return copyRules([rule], mode)[0];\n}\n\nexport function copyRules(rules, mode) {\n    return deepExtend([], rules, mode);\n}\n","import Creator, {creatorFactory} from './creator';\nimport {parseJson, enumerable} from '../core/util';\nimport {extend, isPlainObject, isString, isValidChildren} from '@form-create/utils';\n\n\nconst commonMaker = creatorFactory('');\n\nexport function create(type, field, title) {\n    let make = commonMaker('', field);\n    make._data.type = type;\n    make._data.title = title;\n    return make;\n}\n\nexport function createTmp(template, vm, field, title) {\n    let make = commonMaker('', field);\n    make._data.type = 'template';\n    make._data.template = template;\n    make._data.title = title;\n    make._data.vm = vm;\n    return make;\n}\n\nexport default function makerFactory() {\n    let maker = {};\n\n    extend(maker, {\n        create,\n        createTmp\n    });\n    maker.template = createTmp;\n    maker.parse = parse;\n\n    return maker;\n}\n\nfunction parse(rule, toMaker = false) {\n    if (isString(rule)) rule = parseJson(rule);\n\n    if (rule instanceof Creator) return toMaker ? rule : rule.getRule();\n    if (isPlainObject(rule)) {\n        const maker = ruleToMaker(rule);\n        return toMaker ? maker : maker.getRule();\n    } else if (!Array.isArray(rule)) return rule;\n    else {\n        const rules = rule.map(r => parse(r, toMaker));\n        Object.defineProperties(rules, {\n            find: enumerable(findField),\n            model: enumerable(model)\n        });\n\n        return rules;\n    }\n}\n\nfunction findField(field, origin) {\n    let children = [];\n    for (let i in this) {\n        const rule = this[i] instanceof Creator ? this[i]._data : this[i];\n        if (rule.field === field) return origin === true ? rule : this[i];\n        if (isValidChildren(rule.children)) children = children.concat(rule.children);\n    }\n    if (children.length > 0) return findField.call(children, field);\n}\n\nfunction model(formData) {\n    Object.keys(formData).forEach(field => {\n        const rule = this.find(field, true);\n        if (rule) rule.value = formData[field];\n    });\n}\n\nfunction ruleToMaker(rule) {\n    const maker = new Creator();\n    Object.keys(rule).forEach(key => {\n        maker._data[key] = rule[key];\n    });\n    return maker;\n}\n","import {isFunction, isString, toString} from '@form-create/utils';\n\nfunction parseVData(data) {\n    if (isString(data))\n        data = {domProps: {innerHTML: data}};\n    else if (data && isFunction(data.get))\n        data = data.get();\n\n    return data;\n}\n\nfunction getVNode(VNode) {\n    return isFunction(VNode) ? VNode() : (VNode || []);\n}\n\nexport default class VNode {\n\n    constructor(vm) {\n        if (vm)\n            this.setVm(vm);\n    }\n\n    setVm(vm) {\n        this.vm = vm;\n        this.$h = vm.$createElement;\n    }\n\n    make(nodeName, data, VNodeFn) {\n        let Node = this.$h(nodeName, parseVData(data), getVNode(VNodeFn));\n        Node.context = this.vm;\n\n        return Node;\n    }\n\n    static use(nodes) {\n        Object.keys(nodes).forEach((k) => {\n            VNode.prototype[toString(k).toLocaleLowerCase()] = VNode.prototype[k] = function (data, VNodeFn) {\n                return this.make(nodes[k], data, VNodeFn);\n            };\n        });\n    }\n}\n\nVNode.use({fragment: 'fcFragment'});\n","import VData from './vData';\nimport {toString, uniqueId} from '@form-create/utils';\nimport VNode from './vNode';\n\nexport default class BaseParser {\n\n    constructor(handle, rule, id) {\n        this.rule = rule;\n        this.vData = new VData;\n        this.vNode = new VNode();\n        this.id = id;\n        this.watch = [];\n        this.originType = rule.type;\n        this.type = toString(rule.type).toLocaleLowerCase();\n        this.isDef = true;\n        this.el = undefined;\n\n        if (!rule.field) {\n            this.field = '_def_' + uniqueId();\n            this.isDef = false;\n        } else {\n            this.field = rule.field;\n        }\n        this.name = rule.name;\n\n        this.key = 'key_' + id;\n        this.refName = '__' + this.field + this.id;\n        this.formItemRefName = 'fi' + this.refName;\n        this.root = [];\n        this.ctrlRule = null;\n        this.modelEvent = 'input';\n        this.parent = null;\n\n        this.update(handle);\n        this.init();\n    }\n\n    update(handle) {\n        this.$handle = handle;\n        this.$render = handle.$render;\n        this.vm = handle.vm;\n        this.options = handle.options;\n        this.vNode.setVm(this.vm);\n        this.deleted = false;\n    }\n\n    init() {\n    }\n\n    toFormValue(value) {\n        return value\n    }\n\n    toValue(formValue) {\n        return formValue;\n    }\n}\n","import {_vue as Vue} from './index';\nimport {debounce, errMsg, isFunction, isString, isUndef, isValidChildren} from '@form-create/utils';\nimport VNode from '../factory/vNode';\nimport VData, {vdataField} from '../factory/vData';\n\n\nconst $de = debounce((fn) => fn(), 1);\n\nexport default class Render {\n    constructor(handle) {\n        this.$handle = handle;\n        this.fc = handle.fc;\n        this.vm = handle.vm;\n        this.options = handle.options;\n        this.$form = handle.$form;\n        this.vNode = new VNode(this.vm);\n        this.vData = new VData();\n        this.cache = {};\n        this.renderList = {};\n    }\n\n    clearCache(parser, clear = true) {\n        if (!this.cache[parser.id]) return;\n        if (this.cacheStatus(parser))\n            this.$handle.refresh();\n        const parent = this.cache[parser.id].parent;\n        this.cache[parser.id] = null;\n        if (parent && clear)\n            this.clearCache(parent, clear);\n    }\n\n    clearCacheAll() {\n        this.cache = {};\n    }\n\n    setCache(parser, vnode, parent) {\n        this.cache[parser.id] = {\n            vnode,\n            use: false,\n            parent\n        };\n    }\n\n    cacheStatus(parser) {\n        return this.cache[parser.id] && (this.cache[parser.id].use === true || this.cache[parser.id].parent);\n    }\n\n    getCache(parser) {\n        const cache = this.cache[parser.id];\n        cache.use = true;\n        return cache.vnode;\n    }\n\n    initOrgChildren() {\n        const parsers = this.$handle.parsers;\n        this.orgChildren = Object.keys(parsers).reduce((initial, id) => {\n            const children = parsers[id].rule.children;\n            initial[id] = isValidChildren(children) ? [...children] : [];\n\n            return initial;\n        }, {});\n    }\n\n    run() {\n        if (!this.vm.isShow)\n            return;\n\n        this.$form.beforeRender();\n\n        const vn = this.$handle.sortList.map((id) => {\n            return this.renderParser(this.$handle.parsers[id]);\n        }).filter((val) => val !== undefined);\n\n        return this.$form.render(vn);\n    }\n\n    setGlobalConfig(parser) {\n        if (!this.options.global) return;\n        const global = this.options.global;\n\n        if (global['*']) {\n            this.toData(parser, global['*']);\n        }\n        if (global[parser.type]) {\n            this.toData(parser, global[parser.type]);\n        } else if (global[parser.originType]) {\n            this.toData(parser, global[parser.originType]);\n        }\n    }\n\n    renderTemplate(parser) {\n        const {id, rule, key} = parser;\n        if (isUndef(Vue.compile)) {\n            console.error('使用的 Vue 版本不支持 compile' + errMsg());\n            return [];\n        }\n\n        if (!this.renderList[id]) {\n            let vm = rule.vm;\n            if (isUndef(rule.vm))\n                vm = new Vue;\n            else if (isFunction(rule.vm))\n                vm = rule.vm(this.$handle.getInjectData(rule));\n\n            this.renderList[id] = {\n                vm,\n                template: Vue.compile(rule.template)\n            };\n\n        }\n\n        const {vm, template} = this.renderList[id];\n\n        setTemplateProps(vm, parser, this.$handle.fCreateApi);\n\n        vm.$off('input');\n        vm.$on('input', (value) => {\n            this.onInput(parser, value);\n        });\n\n        const vn = template.render.call(vm);\n\n        if (isUndef(vn.data)) vn.data = {};\n        vn.key = key;\n        return vn;\n    }\n\n    renderParser(parser, parent) {\n        if (parser.type === 'hidden') return;\n        if (!this.cache[parser.id] || parser.type === 'template') {\n\n            parser.vData.get();\n            this.setGlobalConfig(parser);\n\n            let {type, rule} = parser, form = this.$form, vn;\n\n            if (type === 'template' && rule.template) {\n                vn = this.renderTemplate(parser);\n\n                if (parent && isUndef(rule.native)) {\n                    this.setCache(parser, vn, parent);\n                    return vn;\n                }\n            } else if (!this.$handle.isNoVal(parser)) {\n                const children = this.renderChildren(parser);\n                vn = parser.render ? parser.render(children) : this.defaultRender(parser, children);\n            } else {\n                vn = this.defaultRender(parser, this.renderChildren(parser));\n                if (parent && isUndef(rule.native)) {\n                    this.setCache(parser, vn, parent);\n                    return vn;\n                }\n            }\n            if (rule.native !== true)\n                vn = form.container(vn, parser);\n            this.setCache(parser, vn, parent);\n            return vn;\n        }\n\n        return this.getCache(parser);\n    }\n\n    toData(parser, data) {\n        vdataField.forEach((key) => {\n            if (data[key] !== undefined)\n                parser.vData[key](data[key]);\n        });\n\n        return parser.vData;\n    }\n\n    parserToData(parser) {\n        return this.toData(parser, parser.rule);\n    }\n\n    inputVData(parser, custom) {\n        const {refName, key} = parser;\n\n        this.parserToData(parser);\n\n        let data = parser.vData\n            .ref(refName).key('fc_item' + key).props('formCreate', this.$handle.fCreateApi)\n            .on('fc.subForm', (subForm) => this.$handle.addSubForm(parser, subForm));\n\n        const model = this.$handle.modelEvent(parser);\n        if (!custom)\n            data.on(model.event || model, (value) => {\n                this.onInput(parser, value);\n            }).props(model.prop || 'value', this.$handle.getFormData(parser));\n\n        this.$form.inputVData && this.$form.inputVData(parser, custom);\n\n        return data;\n    }\n\n    onInput(parser, value) {\n        this.$handle.onInput(parser, value);\n    }\n\n    renderChildren(parser) {\n        const {children} = parser.rule, orgChildren = this.orgChildren[parser.id];\n\n        if (!isValidChildren(children)) {\n            orgChildren.forEach(child => {\n                if (!isString(child) && child.__fc__) {\n                    this.$handle.removeField(child.__fc__);\n                }\n            });\n            this.orgChildren[parser.id] = [];\n            return [];\n        }\n\n        this.orgChildren[parser.id].forEach(child => {\n            if (children.indexOf(child) === -1 && !isString(child) && child.__fc__) {\n                this.$handle.removeField(child.__fc__);\n            }\n        });\n\n        return children.map(child => {\n            if (isString(child)) return child;\n            if (child.__fc__) {\n                return this.renderParser(child.__fc__, parser);\n            }\n            if (!this.$handle.isset(child) && child.type)\n                $de(() => this.$handle.reloadRule());\n        });\n\n    }\n\n    defaultRender(parser, children) {\n        const vdata = this.inputVData(parser);\n        if (this.vNode[parser.type])\n            return this.vNode[parser.type](vdata, children);\n        if (this.vNode[parser.originType])\n            return this.vNode[parser.originType](vdata, children);\n        return this.vNode.make(parser.originType, vdata, children);\n    }\n}\n\nfunction setTemplateProps(vm, parser, fApi) {\n    if (!vm.$props)\n        return;\n    const {rule} = parser;\n    const keys = Object.keys(vm.$props);\n    keys.forEach(key => {\n        if (rule.props[key] !== undefined)\n            vm.$props[key] = rule.props[key];\n    });\n\n    if (keys.indexOf('value') !== -1) {\n        vm.$props.value = parser.rule.value;\n    }\n    vm.$props.formCreate = fApi;\n}\n","import {$set, deepExtend, errMsg, isFunction, isPlainObject, isUndef} from '@form-create/utils';\nimport {toJson} from './util';\n\n\nexport default function Api(h) {\n\n    function tidyFields(fields, all = false) {\n        if (!fields)\n            fields = all ? Object.keys(h.fieldList) : h.fields();\n        else if (!Array.isArray(fields))\n            fields = [fields];\n        return fields;\n    }\n\n    return {\n        formData() {\n            const parsers = h.fieldList;\n\n            return Object.keys(parsers).reduce((initial, id) => {\n                const parser = parsers[id];\n                initial[parser.field] = deepExtend({}, {value: parser.rule.value}).value;\n                return initial;\n            }, {});\n        },\n        getValue(field) {\n            const parser = h.fieldList[field];\n            if (!parser) return;\n            return deepExtend({}, {value: parser.rule.value}).value;\n        },\n        setValue(field, value) {\n            let formData = field;\n            if (!isPlainObject(field))\n                formData = {[field]: value};\n            Object.keys(formData).forEach(key => {\n                const parser = h.fieldList[key];\n                if (!parser) return;\n                parser.rule.value = formData[key];\n            });\n        },\n        changeValue(field, value) {\n            this.setValue(field, value);\n        },\n        changeField(field, value) {\n            this.setValue(field, value);\n        },\n        removeField(field) {\n            let parser = h.getParser(field);\n            if (!parser)\n                return;\n            let index = parser.root.indexOf(parser.rule.__origin__);\n            if (index === -1)\n                return;\n            parser.root.splice(index, 1);\n            if (h.sortList.indexOf(parser.id) === -1)\n                this.reload();\n\n            return parser.rule.__origin__;\n        },\n        destroy: () => {\n            h.vm.$el.parentNode && h.vm.$el.parentNode.removeChild(h.vm.$el);\n            h.vm.$destroy();\n        },\n        fields: () => h.fields(),\n        append: (rule, after, isChild) => {\n            let fields = Object.keys(h.fieldList), index = h.sortList.length, rules;\n\n            if (rule.field && fields.indexOf(rule.field) !== -1)\n                return console.error(`${rule.field} 字段已存在` + errMsg());\n\n            const parser = h.getParser(after);\n\n            if (parser) {\n                if (isChild) {\n                    rules = parser.rule.children;\n                    index = parser.rule.children.length;\n                } else {\n                    index = parser.root.indexOf(parser.rule.__origin__);\n                    rules = parser.root;\n                }\n            } else rules = h.rules;\n            rules.splice(index + 1, 0, rule);\n        },\n        prepend: (rule, after, isChild) => {\n            let fields = Object.keys(h.fieldList), index = 0, rules;\n\n            if (rule.field && fields.indexOf(rule.field) !== -1)\n                return console.error(`${rule.field} 字段已存在` + errMsg());\n\n            const parser = h.getParser(after);\n\n            if (parser) {\n                if (isChild) {\n                    rules = parser.rule.children;\n                } else {\n                    index = parser.root.indexOf(parser.rule.__origin__);\n                    rules = parser.root;\n                }\n            } else rules = h.rules;\n            rules.splice(index, 0, rule);\n        },\n        hidden(hidden, fields) {\n            tidyFields(fields, true).forEach((field) => {\n                const parser = h.getParser(field);\n                if (!parser)\n                    return;\n                $set(parser.rule, 'hidden', !!hidden);\n                h.$render.clearCache(parser, true);\n            });\n            h.refresh();\n        },\n        hiddenStatus(id) {\n            const parser = h.getParser(id);\n            if (!parser) return;\n            return !!parser.rule.hidden;\n        },\n        visibility(visibility, fields) {\n            tidyFields(fields, true).forEach((field) => {\n                const parser = h.getParser(field);\n                if (!parser)\n                    return;\n                $set(parser.rule, 'visibility', !!visibility);\n                h.$render.clearCache(parser, true);\n            });\n            h.refresh();\n        },\n        visibilityStatus(id) {\n            const parser = h.getParser(id);\n            if (!parser) return;\n            return !!parser.rule.visibility;\n        },\n        disabled(disabled, fields) {\n            tidyFields(fields, true).forEach((field) => {\n                const parser = h.fieldList[field];\n                if (!parser)\n                    return;\n                h.vm.$set(parser.rule.props, 'disabled', !!disabled);\n            });\n        },\n        model() {\n            return Object.keys(h.trueData).reduce((initial, key) => {\n                initial[key] = h.trueData[key].rule;\n                return initial;\n            }, {});\n        },\n        component() {\n            return Object.keys(h.customData).reduce((initial, key) => {\n                initial[key] = h.customData[key].rule;\n                return initial;\n            }, {});\n        },\n        bind() {\n            let bind = {}, properties = {};\n            Object.keys(h.fieldList).forEach((field) => {\n                const parser = h.fieldList[field];\n                properties[field] = {\n                    get() {\n                        return parser.rule.value;\n                    },\n                    set(value) {\n                        parser.rule.value = value;\n                    },\n                    enumerable: true,\n                    configurable: true\n                };\n            });\n            Object.defineProperties(bind, properties);\n            return bind;\n        },\n        submitBtnProps: (props = {}) => {\n            h.vm._buttonProps(props);\n        },\n        resetBtnProps: (props = {}) => {\n            h.vm._resetProps(props);\n        },\n        set: (node, field, value) => {\n            h.vm.$set(node, field, value);\n        },\n        reload: (rules) => {\n            h.reloadRule(rules)\n        },\n        updateOptions(options) {\n            deepExtend(h.options, options);\n            this.refresh(true);\n        },\n        onSubmit(fn) {\n            this.updateOptions({onSubmit: fn});\n        },\n        sync: (field) => {\n            const parser = h.getParser(field);\n            if (parser) {\n                h.$render.clearCache(parser, true);\n                h.refresh();\n            }\n        },\n        refresh: (clear) => {\n            if (clear)\n                h.$render.clearCacheAll();\n            h.refresh();\n        },\n        hideForm: (isShow) => {\n            h.vm.isShow = !isShow;\n        },\n        changeStatus: () => {\n            return h.changeStatus;\n        },\n        clearChangeStatus: () => {\n            h.changeStatus = false;\n        },\n        updateRule: (id, rule, cover) => {\n            const parser = h.getParser(id);\n            if (parser) {\n                cover ? Object.keys(rule).forEach(key => {\n                    parser.rule[key] = rule[key];\n                }) : deepExtend(parser.rule, rule);\n                return parser.rule.__origin__;\n            }\n        },\n        getRule: (id) => {\n            const parser = h.getParser(id);\n            if (parser) {\n                return parser.rule;\n            }\n        },\n        updateRules(rules, cover) {\n            Object.keys(rules).forEach(id => {\n                this.updateRule(id, rules[id], cover);\n            })\n        },\n        updateValidate(id, validate, merge) {\n            const parser = h.getParser(id);\n            if (parser) {\n                parser.rule.validate = merge ? parser.rule.validate.concat(validate) : validate;\n            }\n        },\n        updateValidates(validates, merge) {\n            Object.keys(validates).forEach(id => {\n                this.updateValidate(id, validates[id], merge);\n            })\n        },\n        method(id, name) {\n            const el = this.el(id);\n            if (!el || !el[name])\n                throw new Error('方法不存在' + errMsg());\n            return (...args) => {\n                return el[name](...args);\n            }\n        },\n        toJson() {\n            return toJson(this.rule);\n        },\n        on(...args) {\n            h.vm.$on(...args);\n        },\n        once(...args) {\n            h.vm.$once(...args);\n        },\n        off(...args) {\n            h.vm.$off(...args);\n        },\n        trigger(id, event, ...args) {\n            const el = this.el(id);\n            el && el.$emit(event, ...args);\n        },\n        el(id) {\n            const parser = h.getParser(id);\n            if (parser) return parser.el;\n        },\n        validate(callback) {\n            let state = false;\n            let subForm = {\n                ...{\n                    ___this: {\n                        validate(call) {\n                            h.$form.validate((valid) => {\n                                call && call(valid);\n                            });\n                        }\n                    }\n                }, ...h.subForm\n            };\n            let keys = Object.keys(subForm).filter(field => {\n                    const sub = subForm[field];\n                    return Array.isArray(sub) ? sub.length : !isUndef(sub);\n                }), len = keys.length, subLen;\n            const validFn = (valid, field) => {\n                if (valid) {\n                    if (subLen > 1) subLen--;\n                    else if (len > 1) len--;\n                    else callback(true);\n                } else {\n                    if (!state) {\n                        callback(false);\n                        state = true;\n                    }\n                    field && this.clearValidateState(field, false);\n                }\n            };\n\n            keys.forEach(field => {\n                let sub = subForm[field];\n                if (Array.isArray(sub)) {\n                    subLen = sub.length;\n                    sub.forEach(form => {\n                        form.validate((v) => validFn(v, field))\n                    })\n                } else if (sub) {\n                    subLen = 1;\n                    sub.validate(validFn)\n                }\n\n            });\n\n        },\n        validateField: (field, callback) => {\n            if (!h.fieldList[field])\n                return;\n            h.$form.validateField(field, callback);\n        },\n        resetFields(fields) {\n            let parsers = h.fieldList;\n            tidyFields(fields, true).forEach(field => {\n                let parser = parsers[field];\n                if (!parser) return;\n\n                if (parser.type === 'hidden') return;\n                h.$form.resetField(parser);\n                h.refreshControl(parser);\n                h.$render.clearCache(parser, true);\n            });\n        },\n        submit(successFn, failFn) {\n            this.validate((valid) => {\n                if (valid) {\n                    let formData = this.formData();\n                    if (isFunction(successFn))\n                        successFn(formData, this);\n                    else {\n                        h.options.onSubmit && h.options.onSubmit(formData, this);\n                        h.fc.$emit('on-submit', formData, this);\n                    }\n                } else {\n                    failFn && failFn(this)\n                }\n            });\n        },\n        clearValidateState(fields, clearSub = true) {\n            tidyFields(fields).forEach(field => {\n                if (clearSub) this.clearSubValidateState(field);\n                const parser = h.fieldList[field];\n                if (!parser)\n                    return;\n                h.$form.clearValidateState(parser);\n            });\n        },\n        clearSubValidateState(fields) {\n            tidyFields(fields).forEach(field => {\n                const subForm = h.subForm[field];\n                if (subForm) {\n                    if (Array.isArray(subForm)) {\n                        subForm.forEach(form => {\n                            form.clearValidateState();\n                        })\n                    } else if (subForm) {\n                        subForm.clearValidateState();\n                    }\n                }\n            })\n        },\n        getSubForm(field) {\n            return h.subForm[field];\n        },\n        btn: {\n            loading: (loading = true) => {\n                h.vm._buttonProps({loading: !!loading});\n            },\n            disabled: (disabled = true) => {\n                h.vm._buttonProps({disabled: !!disabled});\n            },\n            show: (isShow = true) => {\n                h.vm._buttonProps({show: !!isShow});\n            }\n        },\n        resetBtn: {\n            loading: (loading = true) => {\n                h.vm._resetProps({loading: !!loading});\n            },\n            disabled: (disabled = true) => {\n                h.vm._resetProps({disabled: !!disabled});\n            },\n            show: (isShow = true) => {\n                h.vm._resetProps({show: !!isShow});\n            }\n        },\n        closeModal: (field) => {\n            const parser = h.fieldList[field];\n            parser && parser.closeModel && parser.closeModel();\n        }\n    };\n}\n","import {\n    $del,\n    $set, deepExtend,\n    errMsg,\n    extend,\n    isString,\n    isUndef,\n    isValidChildren,\n    isPlainObject,\n    toLine,\n    toString,\n    uniqueId,\n    isFunction\n} from '@form-create/utils';\nimport BaseParser from '../factory/parser';\nimport Render from './render';\nimport Api from './api';\nimport {copyRule, enumerable} from './util';\n\n\nexport function getRule(rule) {\n    if (isFunction(rule.getRule))\n        return rule.getRule();\n    else\n        return rule;\n}\n\nexport default class Handle {\n\n    constructor(fc) {\n        const {vm, rules, options} = this.fc = fc;\n\n        this.watching = false;\n        this.vm = vm;\n        this.options = options;\n\n        this.validate = {};\n        this.formData = {};\n        this.subForm = {};\n\n        this.fCreateApi = undefined;\n\n        this.__init(rules);\n        this.$form = new fc.drive.formRender(this);\n        this.$render = new Render(this);\n\n        this.loadRule(this.rules, false);\n\n        this.$render.initOrgChildren();\n\n        this.$form.init();\n    }\n\n    __init(rules) {\n        this.fieldList = {};\n        this.trueData = {};\n        this.parsers = {};\n        this.customData = {};\n        this.sortList = [];\n        this.rules = rules;\n        this.origin = [...this.rules];\n        this.changeStatus = false;\n        this.issetRule = [];\n    }\n\n    modelEvent(parser) {\n        const modelList = this.fc.modelEvents;\n        return modelList[parser.type] || modelList[parser.originType] || parser.rule.model || parser.modelEvent;\n    }\n\n    isset(rule) {\n        return this.issetRule.indexOf(rule) > -1;\n    }\n\n    loadRule(rules, parent) {\n        rules.map((_rule, index) => {\n            if (parent && isString(_rule)) return;\n\n            if (!_rule.type)\n                return console.error('未定义生成规则的 type 字段' + errMsg());\n\n            let parser;\n\n            if (_rule.__fc__) {\n                parser = _rule.__fc__;\n\n                //规则在其他 form-create 中使用,自动浅拷贝\n                if (!parser.deleted && (parser.vm !== this.vm || this.parsers[parser.id])) {\n                    rules[index] = _rule = copyRule(_rule);\n                    parser = this.createParser(this.parseRule(_rule));\n                } else {\n                    parser.update(this);\n                    let rule = parser.rule;\n                    this.parseOn(rule);\n                    this.parseProps(rule);\n                }\n            } else {\n                parser = this.createParser(this.parseRule(_rule));\n            }\n\n            let children = parser.rule.children, rule = parser.rule;\n            if (!this.notField(parser.field)) {\n                this.issetRule.push(_rule);\n                return console.error(`${rule.field} 字段已存在` + errMsg());\n            }\n            parser.parent = parent || null;\n            this.setParser(parser);\n\n            if (!_rule.__fc__) {\n                bindParser(_rule, parser);\n            }\n            if (isValidChildren(children)) {\n                this.loadRule(children, parser);\n            }\n\n            if (!parent) {\n                this.sortList.push(parser.id);\n            }\n\n            if (!this.isNoVal(parser))\n                Object.defineProperty(parser.rule, 'value', this.valueHandle(parser));\n\n            return parser;\n        }).filter(h => h).forEach(h => {\n            h.root = rules;\n        });\n    }\n\n    valueHandle(parser) {\n        return {\n            enumerable: true,\n            get: () => {\n                return parser.toValue(this.getFormData(parser));\n            },\n            set: (value) => {\n                if (this.isChange(parser, value)) {\n                    this.$render.clearCache(parser, true);\n                    this.setFormData(parser, parser.toFormValue(value));\n                    this.valueChange(parser, value);\n                    this.refresh();\n                    this.vm.$emit('setValue', parser.field, value, this.fCreateApi);\n                }\n            }\n        };\n    }\n\n    createParser(rule) {\n        return new (this.fc.parsers[toString(rule.type).toLocaleLowerCase()] || BaseParser)(this, rule, '' + uniqueId());\n    }\n\n    parseRule(_rule) {\n        const def = defRule(), rule = getRule(_rule);\n\n        Object.defineProperties(rule, {\n            __origin__: enumerable(_rule)\n        });\n\n        Object.keys(def).forEach(k => {\n            if (!rule.hasOwnProperty(k)) $set(rule, k, def[k]);\n        });\n\n        if (rule.field && this.options.formData[rule.field] !== undefined)\n            rule.value = this.options.formData[rule.field];\n\n        rule.options = parseArray(rule.options);\n        this.parseOn(rule);\n        this.parseProps(rule);\n\n        return rule;\n    }\n\n    parseOn(rule) {\n        this.parseInjectEvent(rule, rule.on || {});\n        if (!this.watching) {\n            this.margeEmit(rule);\n        }\n    }\n\n    margeEmit(rule) {\n        const emitEvent = this.parseEmit(rule);\n        if (Object.keys(emitEvent).length > 0) extend(rule.on, emitEvent);\n    }\n\n    parseProps(rule) {\n        this.parseInjectEvent(rule, rule.props || {});\n    }\n\n    parseInjectEvent(rule, on) {\n        if (this.options.injectEvent || rule.inject)\n            Object.keys(on).forEach(k => {\n                if (isFunction(on[k]))\n                    on[k] = this.inject(rule, on[k])\n            });\n        return on;\n    }\n\n    getInjectData(self, inject) {\n        const {option, rule} = this.vm.$options.propsData;\n        return {\n            $f: this.fCreateApi,\n            rule,\n            self: self.__origin__,\n            option,\n            inject: inject || rule.inject || {}\n        };\n    }\n\n    inject(self, _fn, inject) {\n        if (_fn.__inject) {\n            if (this.watching)\n                return _fn;\n            _fn = _fn.__origin;\n        }\n\n        const h = this;\n\n        const fn = function (...args) {\n            args.unshift(h.getInjectData(self, inject));\n            return _fn(...args);\n        };\n        fn.__inject = true;\n        fn.__origin = _fn;\n        return fn;\n    }\n\n    parseEmit(rule) {\n        let event = {}, {emit, emitPrefix, field, name} = rule;\n\n        if (!Array.isArray(emit)) return event;\n        const emitKey = emitPrefix ? emitPrefix : (field || name);\n        if (!emitKey) return event;\n\n        emit.forEach(config => {\n            let inject, eventName = config;\n            if (isPlainObject(config)) {\n                eventName = config.name;\n                inject = config.inject;\n            }\n            if (!eventName) return;\n\n            const _fieldKey = `${emitKey}-${eventName}`;\n            const fieldKey = toLine(_fieldKey).replace('_', '-');\n\n            const fn = (...arg) => {\n                this.vm.$emit(fieldKey, ...arg);\n                if (_fieldKey !== fieldKey)\n                    this.vm.$emit(_fieldKey, ...arg);\n            };\n            fn.__emit = true;\n            event[eventName] = (this.options.injectEvent || config.inject !== undefined) ? this.inject(rule, fn, inject) : fn;\n        });\n\n        return event;\n    }\n\n    run() {\n        if (this.vm.unique > 0)\n            return this.$render.run();\n        else {\n            this.vm.unique = 1;\n            return [];\n        }\n    }\n\n    setParser(parser) {\n        let {id, field, name, rule} = parser;\n        if (this.parsers[id])\n            return;\n        this.parsers[id] = parser;\n\n        if (name)\n            $set(this.customData, name, parser);\n\n        if (this.isNoVal(parser)) return;\n        this.fieldList[field] = parser;\n        $set(this.formData, field, parser.toFormValue(rule.value));\n        $set(this.validate, field, rule.validate || []);\n        $set(this.trueData, field, parser);\n    }\n\n    addSubForm(parser, subForm) {\n        this.subForm[parser.field] = subForm;\n    }\n\n    notField(field) {\n        return this.fieldList[field] === undefined;\n    }\n\n    isChange(parser, value) {\n        return JSON.stringify(parser.rule.value) !== JSON.stringify(value);\n    }\n\n    valueChange(parser) {\n        this.validateControl(parser);\n    }\n\n    onInput(parser, value) {\n        let val;\n        if (!this.isNoVal(parser) && this.isChange(parser, val = parser.toValue(value))) {\n            this.$render.clearCache(parser);\n            this.setFormData(parser, value);\n            this.changeStatus = true;\n            this.valueChange(parser);\n            this.vm.$emit('change', parser.field, val, this.fCreateApi);\n        }\n    }\n\n    getParser(id) {\n        return this.fieldList[id] || this.customData[id] || this.parsers[id];\n    }\n\n    created() {\n        const vm = this.vm;\n\n        vm.$set(vm, 'buttonProps', this.options.submitBtn);\n        vm.$set(vm, 'resetProps', this.options.resetBtn);\n        vm.$set(vm, 'formData', this.formData);\n\n\n        if (this.fCreateApi === undefined)\n            this.fCreateApi = Api(this);\n        this.fCreateApi.rule = this.rules;\n        this.fCreateApi.config = this.options;\n        if (this.fCreateApi.form) {\n            const form = this.fCreateApi.form;\n            Object.keys(form).forEach((field) => {\n                delete form[field];\n            })\n        } else {\n            Object.defineProperty(this.fCreateApi, 'form', {\n                value: {},\n                writable: false,\n                enumerable: true\n            });\n        }\n        Object.defineProperties(this.fCreateApi.form, Object.keys(this.fCreateApi.formData()).reduce((initial, field) => {\n            const parser = this.getParser(field);\n            const handle = this.valueHandle(parser);\n            handle.configurable = true;\n            initial[field] = handle;\n            return initial;\n        }, {}));\n    }\n\n    addParserWitch(parser) {\n        const vm = this.vm;\n\n        Object.keys(parser.rule).forEach((key) => {\n            if (['field', 'type', 'value', 'vm', 'template', 'name', 'config', 'control'].indexOf(key) !== -1 || parser.rule[key] === undefined) return;\n            try {\n                parser.watch.push(vm.$watch(() => parser.rule[key], (n, o) => {\n                    if (o === undefined) return;\n                    this.watching = true;\n                    if (key === 'validate')\n                        this.validate[parser.field] = n;\n                    else if (key === 'props')\n                        this.parseProps(parser.rule);\n                    else if (key === 'on')\n                        this.parseOn(parser.rule);\n                    else if (key === 'emit')\n                        this.margeEmit(parser.rule);\n\n                    this.$render.clearCache(parser);\n                    this.watching = false;\n                }, {deep: key !== 'children', immediate: true}));\n            } catch (e) {\n                //\n            }\n        });\n    }\n\n    refreshControl(parser) {\n        if (!this.isNoVal(parser) && parser.rule.control) {\n            this.validateControl(parser);\n        }\n    }\n\n\n    validateControl(parser) {\n        const controls = getControl(parser), len = controls.length, ctrlRule = parser.ctrlRule;\n        if (!len) return;\n        for (let i = 0; i < len; i++) {\n            const control = controls[i], validate = control.handle || (val => val === control.value);\n            if (validate(parser.rule.value, this.fCreateApi)) {\n                if (ctrlRule) {\n                    if (ctrlRule.children === control.rule)\n                        return;\n                    else\n                        removeControl(parser);\n                }\n                const rule = {\n                    type: 'fcFragment',\n                    native: true,\n                    children: control.rule\n                };\n                //TODO 位置可自定义\n                parser.root.splice(parser.root.indexOf(parser.rule.__origin__) + 1, 0, rule);\n                parser.ctrlRule = rule;\n                this.vm.$emit('control', parser.rule.__origin__, this.fCreateApi);\n                parser.parent && this.$render.clearCache(parser.parent);\n                this.refresh();\n                return;\n            }\n        }\n        if (ctrlRule) {\n            removeControl(parser);\n            this.vm.$emit('control', parser.rule.__origin__, this.fCreateApi);\n            this.refresh();\n        }\n    }\n\n    mountedParser() {\n        const vm = this.vm;\n        Object.keys(this.parsers).forEach((id) => {\n            let parser = this.parsers[id];\n            if (parser.watch.length === 0) this.addParserWitch(parser);\n            this.refreshControl(parser);\n            parser.el = vm.$refs[parser.refName] || {};\n\n            if (parser.defaultValue === undefined)\n                parser.defaultValue = deepExtend({}, {value: parser.rule.value}).value;\n\n            parser.mounted && parser.mounted();\n        });\n    }\n\n    mounted() {\n        const mounted = this.options.mounted;\n\n        this.mountedParser();\n\n        mounted && mounted(this.fCreateApi);\n        this.fc.$emit('mounted', this.fCreateApi);\n    }\n\n    reload() {\n        const onReload = this.options.onReload;\n\n        this.mountedParser();\n\n        onReload && onReload(this.fCreateApi);\n        this.fc.$emit('on-reload', this.fCreateApi);\n    }\n\n    removeField(parser, value) {\n        const {id, field} = parser, index = this.sortList.indexOf(id);\n\n        delParser(parser, value);\n        $del(this.parsers, id);\n\n        if (index !== -1) {\n            this.sortList.splice(index, 1);\n        }\n\n        if (!this.fieldList[field]) {\n            $del(this.validate, field);\n            $del(this.formData, field);\n            $del(this.customData, field);\n            $del(this.fieldList, field);\n            $del(this.trueData, field);\n        }\n\n        if (this.subForm[parser.field])\n            $del(this.subForm, field);\n\n        return parser;\n    }\n\n    refresh() {\n        this.vm._refresh();\n    }\n\n    reloadRule(rules) {\n        const vm = this.vm;\n        if (!rules) return this.reloadRule(this.rules);\n        if (!this.origin.length) this.fCreateApi.refresh();\n        this.origin = [...rules];\n\n        const parsers = {...this.parsers};\n        const formData = this.fCreateApi.formData();\n        this.__init(rules);\n        this.loadRule(rules, false);\n        Object.keys(parsers).filter(id => this.parsers[id] === undefined)\n            .forEach(id => this.removeField(parsers[id], formData[parsers[id].field]));\n        this.$render.initOrgChildren();\n        this.formData = {...this.formData};\n        this.created();\n\n        vm.$f = this.fCreateApi;\n        this.$render.clearCacheAll();\n        this.refresh();\n\n        vm.$nextTick(() => {\n            this.reload();\n        });\n\n    }\n\n    setFormData(parser, value) {\n        $set(this.formData, parser.field, value);\n    }\n\n    getFormData(parser) {\n        return this.formData[parser.field];\n    }\n\n    fields() {\n        return Object.keys(this.formData);\n    }\n\n    isNoVal(parser) {\n        return !parser.isDef;\n    }\n\n}\n\nexport function delParser(parser, value) {\n    if (parser.ctrlRule)\n        removeControl(parser);\n    parser.watch.forEach((unWatch) => unWatch());\n    parser.watch = [];\n    parser.deleted = true;\n    parser.root = [];\n    Object.defineProperty(parser.rule, 'value', {\n        value\n    });\n}\n\nfunction parseArray(validate) {\n    return Array.isArray(validate) ? validate : [];\n}\n\nfunction getControl(parser) {\n    const control = parser.rule.control || [];\n    if (isPlainObject(control)) return [control];\n    else return control;\n}\n\nfunction removeControl(parser) {\n    const index = parser.root.indexOf(parser.ctrlRule);\n    if (index !== -1)\n        parser.root.splice(index, 1);\n    parser.ctrlRule = null;\n}\n\n\nfunction defRule() {\n    return {\n        validate: [],\n        col: {},\n        emit: [],\n        props: {},\n        on: {},\n        options: [],\n        title: undefined,\n        value: null,\n        field: '',\n        name: undefined,\n        className: undefined\n    };\n}\n\nfunction bindParser(rule, parser) {\n    Object.defineProperties(rule, {\n        __field__: enumerable(parser.field),\n        __fc__: enumerable(parser)\n    });\n}\n","const NAME = 'fcFragment';\n\nexport default {\n    name: NAME,\n    functional: true,\n    props: {\n        children: Array\n    },\n    render(h, ctx) {\n        return ctx.children\n    }\n}\n","import {\n    $set,\n    deepExtend,\n    extend,\n    isBool,\n    isElement,\n    toString,\n    isPlainObject\n} from '@form-create/utils';\nimport $FormCreate from '../components/formCreate';\nimport {formCreateName} from '../components/formCreate';\nimport Vue from 'vue';\nimport makerFactory from '../factory/maker';\nimport Handle from './handle';\nimport {creatorFactory} from '../factory/creator';\nimport BaseParser from '../factory/parser';\nimport {parseJson, copyRule, copyRules} from './util';\nimport fragment from '../components/fragment';\n\nexport let _vue = typeof window !== 'undefined' && window.Vue ? window.Vue : Vue;\n\nexport default function createFormCreate(drive) {\n\n    const components = {\n            [fragment.name]: fragment\n        }, parsers = {}, maker = makerFactory(), globalConfig = drive.getConfig(), data = {},\n        modelEvents = {};\n\n    function setParser(id, parser) {\n        id = toString(id);\n        parsers[id.toLocaleLowerCase()] = parser;\n        FormCreate.maker[id] = creatorFactory(id);\n    }\n\n    function setModel(id, model) {\n        modelEvents[id.toLocaleLowerCase()] = model;\n    }\n\n    function createParser() {\n        return class Parser extends BaseParser {\n        }\n    }\n\n    function component(id, component) {\n        id = toString(id);\n        const _id = id.toLocaleLowerCase();\n        if (_id === 'form-create' || _id === 'formcreate')\n            return get$FormCreate();\n        if (component === undefined)\n            return components[id];\n        else\n            components[id] = component;\n    }\n\n    function margeGlobal(config, _options) {\n        if (isBool(_options.submitBtn))\n            _options.submitBtn = {show: _options.submitBtn};\n\n        if (isBool(_options.resetBtn))\n            _options.resetBtn = {show: _options.resetBtn};\n\n        let options = deepExtend(config, _options);\n\n        $set(options, 'el', !options.el\n            ? window.document.body\n            : (isElement(options.el)\n                ? options.el\n                : document.querySelector(options.el)\n            ));\n\n        return options;\n    }\n\n    function get$FormCreate() {\n        return _vue.extend($FormCreate(FormCreate, components));\n    }\n\n\n    function bindAttr(formCreate) {\n        extend(formCreate, {\n            version: drive.version,\n            ui: drive.ui,\n            maker,\n            component,\n            setParser,\n            createParser,\n            data,\n            copyRule,\n            copyRules,\n            $form() {\n                return get$FormCreate();\n            },\n            parseJson(json) {\n                return parseJson(json);\n            }\n        });\n    }\n\n    function create(rules, option) {\n        const $vm = new _vue({\n            data() {\n                return {rule: rules, option: isElement(option) ? {el: option} : option};\n            },\n            render() {\n                return <form-create ref='fc' props={this.$data}/>\n            }\n        });\n        $vm.$mount();\n        return $vm;\n    }\n\n    class FormCreate {\n        constructor(rules, options = {}) {\n            this.fCreateApi = undefined;\n            this.drive = drive;\n            this.parsers = parsers;\n            this.modelEvents = modelEvents;\n            this.vm = undefined;\n            this.rules = Array.isArray(rules) ? rules : [];\n            this.options = margeGlobal(deepExtend({formData: {}}, globalConfig), options);\n        }\n\n        beforeCreate(vm) {\n            this.vm = vm;\n            this.handle = new Handle(this);\n        }\n\n        created() {\n            this.handle.created();\n        }\n\n        api() {\n            return this.handle.fCreateApi;\n        }\n\n        render() {\n            return this.handle.run();\n        }\n\n        mounted() {\n            this.handle.mounted();\n        }\n\n        $emit(eventName, ...params) {\n            if (this.$parent)\n                this.$parent.$emit(`fc:${eventName}`, ...params);\n\n            this.vm.$emit(eventName, ...params);\n        }\n\n        static create(rules, _opt = {}, parent) {\n\n            let $vm = create(rules, _opt);\n\n            const _this = $vm.$refs.fc.formCreate;\n            _this.parent = parent;\n            _this.options.el.appendChild($vm.$el);\n\n            return _this.handle.fCreateApi;\n        }\n\n        static install(Vue, options) {\n            if (options && isPlainObject(options))\n                margeGlobal(globalConfig, options);\n\n            if (Vue._installedFormCreate === true) return;\n            Vue._installedFormCreate = true;\n\n            const $formCreate = function (rules, opt = {}) {\n                return FormCreate.create(rules, opt, this);\n            };\n\n            bindAttr($formCreate);\n\n            Vue.prototype.$formCreate = $formCreate;\n\n            Vue.component(formCreateName, get$FormCreate());\n            Vue.component(fragment.name, _vue.extend(fragment));\n            _vue = Vue;\n        }\n\n        static init(rules, _opt = {}) {\n            let $vm = create(rules, _opt), formCreate = $vm.$refs.fc.formCreate;\n\n            return {\n                mount($el) {\n                    if ($el && isElement($el))\n                        formCreate.options.el = $el;\n                    formCreate.options.el.appendChild($vm.$el);\n                    return formCreate.handle.fCreateApi;\n                },\n                remove() {\n                    formCreate.options.el.removeChild($vm.$el);\n                },\n                destroy() {\n                    this.remove();\n                    $vm.$destroy();\n                },\n                $f: formCreate.handle.fCreateApi\n            };\n        }\n    }\n\n    bindAttr(FormCreate);\n\n\n    drive.components.forEach(component => {\n        FormCreate.component(component.name, component);\n    });\n\n    drive.parsers.forEach(({name, parser}) => {\n        FormCreate.setParser(name, parser);\n    });\n\n    Object.keys(drive.makers).forEach(name => {\n        FormCreate.maker[name] = drive.makers[name];\n    });\n\n    if (drive.modelEvents) {\n        Object.keys(drive.modelEvents).forEach((name) => setModel(name, drive.modelEvents[name]));\n    }\n\n    return {\n        FormCreate,\n        install: FormCreate.install\n    };\n}\n","import VData from './vData';\nimport VNode from './vNode';\nimport {deepExtendArgs, uniqueId} from '@form-create/utils';\n\n\nexport default class BaseForm {\n\n    constructor(handle) {\n        this.$handle = handle;\n        this.vm = handle.vm;\n        this.drive = this.$handle.fc.drive;\n        this.options = handle.options;\n        this.vNode = new VNode(this.vm);\n        this.vData = new VData();\n        this.unique = uniqueId();\n        this.refName = `cForm${this.unique}`;\n    }\n\n    getFormRef() {\n        return this.vm.$refs[this.refName];\n    }\n\n    init() {\n        this.$render = this.$handle.$render;\n    }\n\n    getGetCol(parser, field = 'col') {\n        let col = parser.rule[field] || {}, mCol = {}, pCol = {}, global = this.options.global;\n\n        if (!global)\n            return col;\n\n        if (global['*']) {\n            mCol = global['*'][field] || {};\n        }\n\n        if (global[parser.type]) {\n            pCol = global[parser.type][field] || {};\n        } else if (global[parser.originType]) {\n            pCol = global[parser.originType][field] || {};\n        }\n        col = deepExtendArgs({}, mCol, pCol, col);\n        return col;\n    }\n\n    beforeRender() {\n\n    }\n\n    render() {\n\n    }\n\n    inputVData() {\n    }\n}\n"],"names":["formCreateName","$FormCreate","FormCreate","components","name","componentName","props","rule","type","Array","required","option","Object","value","data","formData","undefined","buttonProps","resetProps","$f","isShow","unique","render","this","formCreate","methods","_buttonProps","$set","deepExtend","_resetProps","_refresh","watch","n","handle","reloadRule","beforeCreate","$options","propsData","created","api","$emit","mounted","beforeDestroy","$render","clearCacheAll","normalMerge","toArrayMerge","functionalMerge","mergeJsxProps","objects","initial","reduce","a","b","key","indexOf","arrA","arrB","event","hook","mergeFn","fn1","fn2","apply","arguments","defVData","on","VData","init","_data","classList","status","isUndef","isArray","merge","isPlainObject","toString","keys","_this","length","keyList","objList","forEach","prototype","val","obj","vdataField","concat","baseRule","validate","options","col","children","control","emit","template","emitPrefix","info","creatorFactory","title","field","Creator","creatorTypeFactory","typeName","maker","isFunction","extend","clone","constructor","keyAttrs","attr","objAttrs","opt","arrAttrs","PREFIX","SUFFIX","toJson","JSON","stringify","_isVue","__inject","__origin","__emit","makeFn","fn","eval","parseJson","json","mode","parse","k","v","replace","e","console","error","enumerable","configurable","copyRule","copyRules","rules","commonMaker","create","make","createTmp","vm","makerFactory","toMaker","isString","getRule","ruleToMaker","map","r","defineProperties","find","findField","model","origin","i","isValidChildren","call","parseVData","domProps","innerHTML","get","getVNode","VNode","setVm","$h","$createElement","nodeName","VNodeFn","Node","context","nodes","toLocaleLowerCase","use","fragment","BaseParser","id","vData","vNode","originType","isDef","el","uniqueId","refName","formItemRefName","root","ctrlRule","modelEvent","parent","update","$handle","deleted","formValue","$de","debounce","Render","fc","$form","cache","renderList","parser","clear","cacheStatus","refresh","clearCache","vnode","parsers","orgChildren","beforeRender","vn","sortList","renderParser","filter","global","toData","Vue","compile","errMsg","getInjectData","setTemplateProps","fCreateApi","$off","$on","_this2","onInput","setGlobalConfig","form","renderTemplate","setCache","isNoVal","defaultRender","renderChildren","container","getCache","custom","parserToData","ref","subForm","_this3","addSubForm","prop","getFormData","inputVData","child","__fc__","_this4","removeField","isset","vdata","fApi","$props","Api","h","tidyFields","fields","all","fieldList","getValue","setValue","changeValue","changeField","getParser","index","__origin__","splice","reload","destroy","$el","parentNode","removeChild","$destroy","append","after","isChild","prepend","hidden","hiddenStatus","visibility","visibilityStatus","disabled","trueData","component","customData","bind","properties","set","submitBtnProps","resetBtnProps","node","updateOptions","onSubmit","sync","hideForm","changeStatus","clearChangeStatus","updateRule","cover","updateRules","updateValidate","updateValidates","validates","method","Error","once","$once","off","trigger","args","callback","subLen","state","___this","valid","sub","len","validFn","clearValidateState","validateField","resetFields","resetField","refreshControl","submit","successFn","failFn","clearSub","_this5","clearSubValidateState","getSubForm","btn","loading","show","resetBtn","closeModal","closeModel","Handle","watching","__init","drive","formRender","loadRule","initOrgChildren","issetRule","modelList","modelEvents","_rule","parseOn","parseProps","createParser","parseRule","notField","setParser","bindParser","push","defineProperty","valueHandle","toValue","isChange","setFormData","toFormValue","valueChange","def","defRule","hasOwnProperty","parseArray","parseInjectEvent","margeEmit","emitEvent","parseEmit","injectEvent","inject","self","_fn","unshift","emitKey","config","eventName","_fieldKey","fieldKey","toLine","arg","run","validateControl","submitBtn","writable","$watch","o","_this6","deep","immediate","controls","getControl","_this7","removeControl","_this8","addParserWitch","$refs","defaultValue","mountedParser","onReload","delParser","$del","_this9","$nextTick","unWatch","className","__field__","NAME","functional","ctx","_vue","window","createFormCreate","globalConfig","getConfig","_id","get$FormCreate","margeGlobal","_options","isBool","isElement","document","querySelector","body","bindAttr","version","ui","$vm","$data","$mount","params","$parent","_opt","appendChild","_installedFormCreate","$formCreate","mount","remove","makers","setModel","install","BaseForm","mCol","pCol","deepExtendArgs"],"mappings":"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"}