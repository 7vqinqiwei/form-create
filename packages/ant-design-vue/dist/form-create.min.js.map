{"version":3,"file":"form-create.min.js","sources":["../src/components/index.js","../src/parsers/checkbox/index.js","../src/parsers/checkbox/parser.js","../src/parsers/datePicker/parser.js","../src/parsers/datePicker/index.js","../src/parsers/frame/index.js","../src/parsers/frame/parser.js","../src/parsers/hidden/index.js","../src/parsers/input/index.js","../src/parsers/input/parser.js","../src/parsers/radio/index.js","../src/parsers/radio/parser.js","../src/parsers/select/parser.js","../src/parsers/index.js","../src/parsers/select/index.js","../src/parsers/timePicker/index.js","../src/parsers/timePicker/parser.js","../src/parsers/tree/index.js","../src/parsers/tree/parser.js","../src/parsers/upload/index.js","../src/parsers/upload/parser.js","../src/core/config.js","../../../node_modules/style-inject/dist/style-inject.es.js","../src/core/form.js","../src/makers/datePicker.js","../src/makers/frame.js","../src/makers/input.js","../src/makers/select.js","../src/makers/slider.js","../src/makers/upload.js","../src/makers/index.js","../src/core/modelEvents.js","../src/core/index.js","../src/core/nodes.js","../src/index.js"],"sourcesContent":["import upload from '@form-create/component-antdv-upload'\nimport frame from '@form-create/component-antdv-frame'\nimport group from '@form-create/component-antdv-group'\n\nexport default [\n    upload, frame, group\n]\n","import parser from './parser';\n\nconst name = 'checkbox';\n\nexport default {parser, name};\n","import {BaseParser} from '@form-create/core';\n\nexport default class Parser extends BaseParser {\n\n    render(children) {\n        return this.vNode.checkbox(this.$render.inputVData(this).props({\n            'options': this.rule.options,\n        }), children);\n    }\n\n}\n","import {BaseParser} from '@form-create/core';\nimport moment from 'moment';\n\nconst FORMAT_TYPE = {\n    date: 'YYYY-MM-DD',\n    month: 'YYYY-MM',\n    week: 'YYYY-wo',\n    range: 'YYYY-MM-DD HH:mm:ss'\n};\n\nconst getType = function (type) {\n    if (['date', 'month', 'week', 'range'].indexOf(type) === -1) return 'date';\n    return type;\n};\n\nconst toMoment = function (val) {\n    return val instanceof moment ? val : moment(val);\n};\n\nexport default class Parser extends BaseParser {\n\n    toFormValue(value) {\n        let parseValue, type = this.getType();\n        const isArr = Array.isArray(value);\n        if (type === 'range') {\n            if (isArr) {\n                parseValue = value.map(v => v ? toMoment(v) : null);\n            } else {\n                parseValue = []\n            }\n        } else {\n            parseValue = isArr ? ((value[0] ? toMoment(value[0]) : null) || null) : (value ? toMoment(value) : null);\n        }\n        return parseValue;\n\n    }\n\n    toValue(formValue) {\n        const format = this.getFormat();\n        if (Array.isArray(formValue))\n            return formValue.map(v => v ? v.format(format) : v);\n        else\n            return formValue ? formValue.format(format) : formValue;\n    }\n\n    getFormat() {\n        return this.rule.props.format || (this.el ? this.el.format : '') || FORMAT_TYPE[getType(this.rule.props.type)];\n    }\n\n    getType() {\n        return getType(this.rule.props.type);\n    }\n\n    render(children) {\n        const type = this.getType() + 'Picker';\n        return this.vNode[type](this.$render.inputVData(this), [children])\n    }\n\n}\n","import parser from './parser';\n\nconst name = 'datePicker';\n\n\nexport default {parser, name};\n","import parser from './parser';\n\nconst name = 'frame';\n\n\nexport default {parser, name};\n","import {BaseParser} from '@form-create/core';\n\n\nexport default class Parser extends BaseParser {\n\n    render(children) {\n        const data = this.$render.inputVData(this).props('field', this.field);\n\n        return this.vNode.frame(data, children);\n    }\n\n    closeModel() {\n        this.el.closeModel && this.el.closeModel();\n    }\n\n}\n","import {BaseParser} from '@form-create/core';\n\nconst name = 'hidden';\n\nclass parser extends BaseParser {\n    render() {\n        return [];\n    }\n}\n\nexport default {parser, name};\n","import parser from './parser';\n\nconst name = 'input';\n\n\nexport default {parser, name};\n","import {BaseParser} from '@form-create/core';\n\n\nexport default class Parser extends BaseParser {\n\n    render(children) {\n        let type = this.rule.props.type;\n        if (['textarea', 'search'].indexOf(type) === -1) type = 'input';\n\n        const Type = (type === 'textarea' ? 'ATextarea' : (type === 'search' ? 'AInputSearch' : 'AInput'));\n        return this.vNode.make(Type, this.$render.inputVData(this), [children])\n    }\n}\n","import parser from './parser';\n\nconst name = 'radio';\n\nexport default {parser, name};","import {BaseParser} from '@form-create/core';\n\nexport default class Parser extends BaseParser {\n\n    render(children) {\n        return this.vNode.radio(this.$render.inputVData(this).props({\n            'options': this.rule.options,\n        }), children);\n    }\n\n}\n","import {BaseParser} from '@form-create/core';\nimport {isUndef} from '@form-create/utils';\n\n\nexport default class Parser extends BaseParser {\n\n    render(children) {\n        return this.vNode.select(this.$render.inputVData(this).props('options', this.rule.options), children);\n    }\n\n    toFormValue(val) {\n        return isUndef(val) ? undefined : val;\n    }\n}\n\n","import checkbox from './checkbox';\nimport datePicker from './datePicker';\nimport frame from './frame';\nimport hidden from './hidden';\nimport input from './input';\nimport radio from './radio';\nimport select from './select';\nimport timePicker from './timePicker';\nimport tree from './tree';\nimport upload from './upload';\n\nexport default [\n    checkbox,\n    datePicker,\n    frame,\n    hidden,\n    input,\n    radio,\n    select,\n    timePicker,\n    tree,\n    upload,\n]\n","import parser from './parser';\n\nconst name = 'select';\n\n\nexport default {parser, name};\n","import parser from './parser';\n\nconst name = 'timePicker';\n\n\nexport default {parser, name};\n","import {BaseParser} from '@form-create/core';\nimport moment from 'moment';\n\nconst toMoment = function (val, format) {\n    return val instanceof moment ? val : moment(val, format);\n};\n\nexport default class Parser extends BaseParser {\n\n    toFormValue(value) {\n        return value ? toMoment(value, this.getFormat()) : null;\n    }\n\n    toValue(formValue) {\n        return formValue ? formValue.format(this.getFormat()) : formValue;\n    }\n\n    getFormat() {\n        return this.rule.props.format || (this.el ? this.el.format : '') || 'HH:mm:ss';\n    }\n}\n\n","import parser from './parser';\n\nconst name = 'tree';\n\nexport default {parser, name};\n","import {BaseParser} from '@form-create/core';\n\nexport default class parser extends BaseParser {\n\n\n    constructor(handle, rule, id) {\n        super(handle, rule, id);\n        this.modelEvent = 'check';\n        const props = this.rule.props;\n        if (!props.replaceFields)\n            props.replaceFields = {\n                key: 'id'\n            };\n        else if (!props.replaceFields.key) props.replaceFields.key = 'id';\n\n    }\n\n    render(children) {\n        const data = this.$render.inputVData(this).props('checkedKeys', this.$handle.getFormData(this)).props('checkable', true).get();\n        return this.vNode.tree(data, [children]);\n    }\n}\n\n","import parser from './parser';\n\nconst name = 'upload';\n\n\nexport default {parser, name};\n","import {BaseParser} from '@form-create/core';\nimport {toArray} from '@form-create/utils';\n\nexport default class parser extends BaseParser {\n\n    render(children) {\n        const data = this.$render.inputVData(this).get();\n        return this.vNode.upload({\n            props: {...data.props, ctx: data, children, value: this.$handle.getFormData(this)},\n            on: {\n                input: (v) => {\n                    this.$render.onInput(this, v);\n                }\n            }\n        });\n    }\n\n    toFormValue(value) {\n        return toArray(value);\n    }\n\n    toValue(formValue) {\n        return this.rule.props.limit === 1 ? (formValue[0] || '') : formValue;\n    }\n}\n\n","const UNDEF = undefined;\n\nexport default function getConfig() {\n    return {\n        form: {\n            hideRequiredMark: false,\n            layout: 'horizontal',\n            labelAlign: 'right',\n            labelCol: {\n                span: 4\n            },\n            wrapperCol: {\n                span: 20\n            },\n            colon: UNDEF,\n            validateOnRuleChange: true\n        },\n        row: {\n            gutter: 0,\n            type: UNDEF,\n            align: UNDEF,\n            justify: UNDEF\n        },\n        info: {\n            type: 'popover',\n            placement: 'topLeft',\n            icon: 'question-circle-o'\n        },\n        submitBtn: {\n            disabled: false,\n            ghost: false,\n            icon: 'upload',\n            loading: false,\n            shape: UNDEF,\n            size: UNDEF,\n            type: 'primary',\n            block: true,\n            innerText: '提交',\n            htmlType: UNDEF,\n            show: true,\n            col: UNDEF,\n            click: UNDEF,\n        },\n        resetBtn: {\n            disabled: false,\n            ghost: false,\n            icon: 'sync',\n            loading: false,\n            shape: UNDEF,\n            size: UNDEF,\n            type: 'default',\n            block: true,\n            innerText: '重置',\n            htmlType: UNDEF,\n            show: false,\n            col: UNDEF,\n            click: UNDEF\n        },\n    };\n}\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import {isFunction, isString, preventDefault} from '@form-create/utils';\nimport {BaseForm} from '@form-create/core';\nimport style from '../style/index.css';\n\nfunction isTooltip(info) {\n    return info.type === 'tooltip';\n}\n\nexport default class Form extends BaseForm {\n\n    inputVData(parser) {\n        if (!parser.rule.props.size && this.options.form.size)\n            parser.vData.props('size', this.options.form.size);\n    }\n\n    validate(call) {\n        this.getFormRef().validate((valid) => {\n            call && call(valid);\n        });\n    }\n\n    validateField(field, call) {\n        this.getFormRef().validateField(field, call);\n    }\n\n    resetField(parser) {\n        this.vm.$refs[parser.formItemRefName].resetField();\n    }\n\n    clearValidateState(parser) {\n        const fItem = this.vm.$refs[parser.formItemRefName];\n        if (fItem) {\n            fItem.validateMessage = '';\n            fItem.validateState = '';\n        }\n    }\n\n    beforeRender() {\n        this.propsData = this.vData.props(this.options.form).props({\n            model: this.$handle.formData,\n            rules: this.$handle.validate,\n            key: 'form' + this.unique\n        }).ref(this.refName).nativeOn({submit: preventDefault}).class(this.options.form.className).class('form-create', true).key(this.unique).get();\n    }\n\n    render(vn) {\n        if (vn.length > 0)\n            vn.push(this.makeFormBtn());\n\n        return this.vNode.form(this.propsData, [this.options.row === false ? vn : this.makeRow(vn)]);\n    }\n\n    makeRow(vn) {\n        const _class = {}, row = this.options.row || {};\n\n        if (row.class) _class[row.class] = true;\n        return this.vNode.row({props: row || {}, key: 'fr' + this.unique, class: _class}, vn)\n    }\n\n    container(child, parser) {\n        return this.makeFormItem(parser, child);\n    }\n\n    getItemCol(parser, field) {\n        const col = this.getGetCol(parser, field);\n        return Object.keys(col).length ? col : undefined\n    }\n\n    makeFormItem(parser, child) {\n        let fItemUnique = `fItem${parser.key}${this.unique}`, isVertical = this.propsData.props.layout === 'vertical',\n            {rule, field, formItemRefName} = parser,\n            col = this.getGetCol(parser), {layout, col: _col} = this.propsData.props,\n            propsData = this.vData.props({\n                prop: field,\n                labelCol: isVertical ? {} : this.getItemCol(parser, 'labelCol'),\n                wrapperCol: isVertical ? {} : this.getItemCol(parser, 'wrapperCol'),\n                rules: rule.validate,\n                required: rule.props.required\n            }).key(fItemUnique).ref(formItemRefName).class(rule.className).get(),\n            node = this.vNode.formItem(propsData, [child, this.makeFormPop(parser, fItemUnique)]);\n        return (layout === 'inline' || _col === false) ? node : this.makeCol(col, parser, fItemUnique, [node]);\n    }\n\n    makeFormPop({rule}, unique) {\n        if (rule.title) {\n            const titleProp = isString(rule.title) ? {title: rule.title} : rule.title;\n            const info = this.options.info || {}, svn = [titleProp.title || ''], isTool = isTooltip(info);\n            if (rule.info) {\n                svn.push(this.vNode.make(isTool ? 'ATooltip' : 'APopover', {\n                    props: {...info, [isTool ? 'title' : 'content']: rule.info},\n                    key: `pop${unique}`\n                }, [\n                    this.vNode.icon({props: {type: info.icon || 'question-circle-o', size: 16}})\n                ]));\n            }\n            return this.vNode.make('span', {...titleProp, slot: 'label'}, svn);\n        }\n    }\n\n    makeCol(col, parser, fItemUnique, VNodeFn) {\n        if (col.span === undefined)\n            col.span = 24;\n        const cls = {\n            [style.__fc_h]: !!parser.rule.hidden,\n            [style.__fc_v]: !!parser.rule.visibility\n        };\n        if (col.class) cls[col.class] = true;\n        return this.vNode.col({\n            props: col, class: cls, key: `${fItemUnique}col1`\n        }, VNodeFn);\n    }\n\n    makeFormBtn() {\n        let btn = [],\n            submitBtnShow = false !== this.vm.buttonProps && false !== this.vm.buttonProps.show,\n            resetBtnShow = false !== this.vm.resetProps && false !== this.vm.resetProps.show;\n        if (submitBtnShow)\n            btn.push(this.makeSubmitBtn(resetBtnShow ? 19 : 24));\n        if (resetBtnShow)\n            btn.push(this.makeResetBtn(4));\n\n        return this.propsData.props.layout === 'inline'\n            ? btn\n            : (btn.length ? this.vNode.col({\n                props: {span: 24},\n                key: `${this.unique}col2`\n            }, btn) : []);\n    }\n\n    makeResetBtn(span) {\n        const resetBtn = this.vm.resetProps,\n            props = resetBtn.col || {span: span, push: 1};\n\n        return this.vNode.col({props: props, key: `${this.unique}col3`}, [\n            this.vNode.button({\n                key: `frsbtn${this.unique}`, props: resetBtn, on: {\n                    'click': () => {\n                        const fApi = this.$handle.fCreateApi;\n                        isFunction(resetBtn.click)\n                            ? resetBtn.click(fApi)\n                            : fApi.resetFields();\n                    }\n                }\n            }, [resetBtn.innerText])\n        ]);\n    }\n\n    makeSubmitBtn(span) {\n        const submitBtn = this.vm.buttonProps,\n            props = submitBtn.col || {span: span};\n\n        return this.vNode.col({props: props, key: `${this.unique}col4`}, [\n            this.vNode.button({\n                key: `fbtn${this.unique}`, props: submitBtn, on: {\n                    'click': () => {\n                        const fApi = this.$handle.fCreateApi;\n                        isFunction(submitBtn.click)\n                            ? submitBtn.click(fApi)\n                            : fApi.submit();\n                    }\n                }\n            }, [submitBtn.innerText])\n        ]);\n    }\n}\n","import {creatorTypeFactory} from '@form-create/core';\n\nconst name = 'datePicker';\n\nexport default ['date', 'month', 'week'].reduce((initial, type) => {\n    initial[type] = creatorTypeFactory(name, type);\n    return initial\n}, {\n    dateRange: creatorTypeFactory(name, 'range'),\n    datetimeRange: creatorTypeFactory(name, m => m.props({type: 'range', showTime: true}))\n});\n","import {creatorTypeFactory} from '@form-create/core';\n\nconst name = 'frame';\n\nconst types = {\n    frameInputs: ['input', 0],\n    frameFiles: ['file', 0],\n    frameImages: ['image', 0],\n    frameInputOne: ['input', 1],\n    frameFileOne: ['file', 1],\n    frameImageOne: ['image', 1]\n};\n\nconst maker = Object.keys(types).reduce((maker, key) => {\n    maker[key] = creatorTypeFactory(name, m => m.props({type: types[key][0], maxLength: types[key][1]}));\n    return maker\n}, {});\n\n\nmaker.frameInput = maker.frameInputs;\nmaker.frameFile = maker.frameFiles;\nmaker.frameImage = maker.frameImages;\n\nexport default maker;","import {creatorTypeFactory} from '@form-create/core';\n\nconst name = 'input';\n\nconst maker = ['password', 'url', 'email', 'text', 'textarea', 'search'].reduce((maker, type) => {\n    maker[type] = creatorTypeFactory(name, type);\n    return maker;\n}, {});\n\nmaker.idate = creatorTypeFactory(name, 'date');\n\nexport default maker;\n","import {creatorTypeFactory} from '@form-create/core';\n\nconst name = 'select';\n\nexport default {\n    selectMultiple: creatorTypeFactory(name, 'multiple', 'mode'),\n    selectTags: creatorTypeFactory(name, 'tags', 'mode'),\n    selectCombobox: creatorTypeFactory(name, 'combobox', 'mode'),\n};\n","import {creatorTypeFactory} from '@form-create/core';\n\nconst name = 'slider';\n\nexport default {\n    sliderRange: creatorTypeFactory(name, true, 'range')\n};","import {creatorTypeFactory} from '@form-create/core';\n\nconst name = 'upload';\n\nconst types = {\n    image: ['image', 0],\n    file: ['file', 0],\n    uploadFileOne: ['file', 1],\n    uploadImageOne: ['image', 1],\n};\n\nconst maker = Object.keys(types).reduce((maker, key) => {\n    maker[key] = creatorTypeFactory(name, m => m.props({uploadType: types[key][0], maxLength: types[key][1]}));\n    return maker\n}, {});\n\nmaker.uploadImage = maker.image;\nmaker.uploadFile = maker.file;\n\nexport default maker;","import {creatorFactory} from '@form-create/core';\nimport datePicker from './datePicker';\nimport frame from './frame';\nimport input from './input';\nimport select from './select';\nimport slider from './slider';\nimport upload from './upload';\n\nconst maker = {...datePicker, ...frame, ...input, ...select, ...slider, ...upload},\n    names = ['autoComplete', 'cascader', 'datePicker', 'frame', 'inputNumber', 'radio', 'rate', 'switch', 'rate', 'slider', 'timePicker'];\n\nnames.forEach(name => {\n    maker[name] = creatorFactory(name);\n});\n\nmaker.auto = maker.autoComplete;\nmaker.number = maker.inputNumber;\nmaker.time = maker.timePicker;\nmaker.hidden = (field, value) => creatorFactory('hidden')('', field, value);\n\nexport default maker;\n","const modelEvents = {\n    'input': 'change.value',\n    'switch': {\n        prop: 'checked',\n        event: 'change'\n    }\n};\n\n['autoComplete', 'cascader', 'inputNumber', 'rate', 'slider', 'change', 'timePicker', 'datePicker', 'select'].forEach(n => modelEvents[n] = 'change');\n\n\nexport default modelEvents;\n","import components from '../components';\nimport parsers from '../parsers';\nimport getConfig from './config';\nimport nodes from './nodes';\nimport formRender from './form';\nimport createFormCreate, {VNode} from '@form-create/core';\nimport makers from '../makers';\nimport modelEvents from './modelEvents';\n\nVNode.use(nodes);\n\nexport const drive = {\n    ui: process.env.UI,\n    version: `${process.env.VERSION}`,\n    formRender,\n    components,\n    parsers,\n    makers,\n    getConfig,\n    modelEvents,\n};\n\nconst {FormCreate, install} = createFormCreate(drive);\n\nif (typeof window !== 'undefined') {\n    window.formCreate = FormCreate;\n    if (window.Vue) {\n        install(window.Vue);\n    }\n}\n\nexport default FormCreate;\n","export default {\n    button: 'a-button',\n    icon: 'a-icon',\n    slider: 'a-slider',\n    rate: 'a-rate',\n    upload: 'fc-update',\n    cascader: 'a-cascader',\n    timePicker: 'a-time-picker',\n    datePicker: 'a-date-picker',\n    rangePicker: 'a-range-picker',\n    weekPicker: 'a-week-picker',\n    monthPicker: 'a-month-picker',\n    'switch': 'a-switch',\n    select: 'a-select',\n    checkbox: 'a-checkbox-group',\n    radio: 'a-radio-group',\n    inputNumber: 'a-input-number',\n    search: 'a-input-search',\n    textarea: 'a-textarea',\n    formItem: 'a-form-model-item',\n    form: 'a-form-model',\n    frame: 'fc-frame',\n    col: 'a-col',\n    row: 'a-row',\n    tree: 'a-tree',\n    autoComplete: 'a-auto-complete',\n    group: 'fc-group',\n}\n","import FormCreate from './core/index';\n\n\nconst maker = FormCreate.maker;\n\nexport {maker}\n\nexport default FormCreate;\n"],"names":["upload","frame","group","parser","children","this","vNode","checkbox","$render","inputVData","props","rule","options","BaseParser","name","FORMAT_TYPE","date","month","week","range","getType","type","indexOf","toMoment","val","moment","value","isArr","Array","isArray","map","v","formValue","format","getFormat","el","data","field","closeModel","Type","make","radio","Parser","select","isUndef","undefined","datePicker","hidden","input","handle","id","modelEvent","_this","replaceFields","key","$handle","getFormData","get","tree","ctx","on","onInput","toArray","limit","UNDEF","css","ref","insertAt","document","head","getElementsByTagName","style","createElement","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","Form","size","form","vData","call","getFormRef","validate","valid","validateField","vm","$refs","formItemRefName","resetField","fItem","validateMessage","validateState","propsData","model","formData","rules","unique","refName","nativeOn","submit","preventDefault","className","vn","length","push","makeFormBtn","row","makeRow","_class","child","makeFormItem","col","getGetCol","Object","keys","fItemUnique","isVertical","layout","_col","prop","labelCol","getItemCol","wrapperCol","required","node","formItem","makeFormPop","makeCol","title","titleProp","isString","info","svn","isTool","isTooltip","icon","slot","VNodeFn","span","cls","__fc_h","__fc_v","visibility","btn","submitBtnShow","buttonProps","show","resetBtnShow","resetProps","makeSubmitBtn","makeResetBtn","resetBtn","button","fApi","fCreateApi","isFunction","click","resetFields","innerText","submitBtn","_this2","BaseForm","reduce","initial","creatorTypeFactory","dateRange","datetimeRange","m","showTime","types","frameInputs","frameFiles","frameImages","frameInputOne","frameFileOne","frameImageOne","maker","maxLength","frameInput","frameFile","frameImage","idate","selectMultiple","selectTags","selectCombobox","sliderRange","image","file","uploadFileOne","uploadImageOne","uploadType","uploadImage","uploadFile","slider","forEach","creatorFactory","auto","autoComplete","number","inputNumber","time","timePicker","modelEvents","event","n","use","rate","cascader","rangePicker","weekPicker","monthPicker","search","textarea","drive","ui","process","version","formRender","components","parsers","makers","getConfig","hideRequiredMark","labelAlign","colon","validateOnRuleChange","gutter","align","justify","placement","disabled","ghost","loading","shape","block","htmlType","createFormCreate","FormCreate","install","window","formCreate","Vue"],"mappings":"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"}